<?xml version="1.0" ?>

<project name="AntIntro" default="dist" basedir=".">

	<property name="dirs.source" value="${basedir}/src" />
	<property name="dirs.test" value="${basedir}/test" />
	<property name="dirs.build" value="${basedir}/build" />
	<property name="dirs.dist" value="${basedir}/dist" />
	<property name="dirs.config" value="${basedir}/toolconfigs" />
	<property name="dirs.libs" value="${basedir}/libs" />
	<property name="dirs.reports" value="${basedir}/reports" />
	<property name="dirs.javadoc" value="${basedir}/reports/javadoc" />
	<property name="dirs.junit" value="${basedir}/reports/junit" />
	<property name="dirs.checkstyle" value="${basedir}/reports/checkstyle" />

	<path id="base.classpath">
		<pathelement location="${dirs.build}" />
		<pathelement path="${java.class.path}" />
		<fileset dir="libs">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="init">
		<echo>Initializing timestamp, creating dirs</echo>
		<tstamp />
		<mkdir dir="${dirs.build}" />
	</target>

	<target name="compile" depends="init" description="Compile all of the source code">
		<echo>Compiling all the code</echo>
		<javac srcdir="${dirs.source};${dirs.test}" destdir="${dirs.build}" >
			<classpath refid="base.classpath"/>
		</javac>
	</target>

	<target name="junittests" depends="compile" description="Executing JUnit tests">
		<echo>Testing, testing, testing ... </echo>
		<mkdir dir="${dirs.junit}" />
		<junit haltonfailure="no" printsummary="yes" showoutput="yes">
			<classpath refid="base.classpath" />
			<formatter type="xml" />
			<batchtest todir="${dirs.junit}">
				<fileset dir="${dirs.build}">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
		<junitreport todir="${dirs.junit}">
			<fileset dir="${dirs.junit}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${dirs.junit}">
			</report>
		</junitreport>
	</target>

	<target name="javadoc">
		<mkdir dir="${dirs.javadoc}" />
		<echo>Generate javadoc</echo>
		<javadoc sourcepath="${dirs.source}" destdir="${dirs.javadoc}" packagenames="*.*" />
	</target>

	<taskdef resource="checkstyletask.properties" classpathref="base.classpath" />

	<target name="checkstyle" description="Report of code convention violations">
		<mkdir dir="${dirs.checkstyle}" />
		<checkstyle config="${dirs.config}/ddoa_checks.xml" failonviolation="true">
			<classpath>
				<path refid="base.classpath" />
			</classpath>
			<fileset dir="${dirs.source}">
				<exclude name="**/*Test.java" />
				<include name="**/*.java" />
			</fileset>
			<formatter type="xml" tofile="${dirs.checkstyle}/checkstyle_report.xml" />
		</checkstyle>
		<xslt in="${dirs.checkstyle}/checkstyle_report.xml" out="${dirs.checkstyle}/index.checkstyle.html" style="${dirs.config}/checkstyle-noframes-sorted.xsl" />
	</target>

	<target name="dist" depends="clean,junittests, checkstyle, javadoc" description="Generate the distribution">
		<echo>Generate lib(s) in jar format</echo>
		<mkdir dir="${dirs.dist}/lib" />
		<jar jarfile="${dirs.dist}/lib/AntIntro-${DSTAMP}.jar" basedir="${dirs.build}" />
	</target>

	<target name="clean" description="Delete directories">
		<delete dir="${dirs.build}" />
		<delete dir="${dirs.dist}" />
		<delete dir="${dirs.javadoc}" />
		<delete dir="${dirs.reports}" />
		<echo>All cleaned</echo>
	</target>

</project>